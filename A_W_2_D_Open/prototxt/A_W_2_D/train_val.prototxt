name: "CaffeNet"
layer {
  name: "s1_data"
  type: "ImageData"
  top: "s1_data"
  top: "s1_label"
  include {
    phase: TRAIN
  }
  transform_param {
    crop_size: 227
    mean_value: 104
    mean_value: 117
    mean_value: 123
    mirror: true
  } 
  image_data_param {
    source: "/home/xurj/MSDA/Office-31/amazon/label.txt"
    root_folder: "/home/xurj/MSDA/Office-31/amazon/images/"
    new_height: 256
    new_width: 256
    is_color: true
    batch_size: 32
    shuffle: true
  }
}
layer {
  name: "s2_data"
  type: "ImageData"
  top: "s2_data"
  top: "s2_label"
  include {
    phase: TRAIN
  }
  transform_param {
    crop_size: 227
    mean_value: 104
    mean_value: 117
    mean_value: 123
    mirror: true
  }
  image_data_param {
    source: "/home/xurj/MSDA/Office-31/webcam/label.txt"
    root_folder: "/home/xurj/MSDA/Office-31/webcam/images/"
    new_height: 256
    new_width: 256
    is_color: true
    batch_size: 32
    shuffle: true
  }
}
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123
    mirror: false
  }
  image_data_param {
    source: "/home/xurj/MSDA/Office-31/dslr/label.txt"
    root_folder: "/home/xurj/MSDA/Office-31/dslr/images/"
    new_height: 256
    new_width: 256
    is_color: true
    batch_size: 1
    shuffle: false
  }
}
#-------------------------data concatenation
layer {
  name: "data"
  type: "Concat"
  bottom: "s1_data"
  bottom: "s2_data"
  top: "data"
  include {
    phase: TRAIN
  }
  concat_param {
    concat_dim: 0
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
#--------------------------split data
layer {
  name: "slice_feature"
  type: "Slice"
  bottom: "pool5"
  top: "s1_feature"
  top: "s2_feature"
  include {
    phase: TRAIN
  }
  slice_param {
    slice_dim: 0
  }
}
layer {
  name: "feature_alias"
  type: "Split"
  bottom: "pool5"
  top: "s1_feature"
  top: "s2_feature"
  include {
    phase: TEST
  }
}
#--------------------------S1
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "s1_feature"
  top: "fc6"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "s1_fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "s1_fc8"
  param {
    lr_mult: 1
    decay_mult: 100
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 31
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "s1_prob"
  type: "Softmax"
  bottom: "s1_fc8"
  top: "s1_prob"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "s1_prob"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "s1_loss"
  type: "SoftmaxWithLoss"
  bottom: "s1_fc8"
  bottom: "s1_label"
  top: "s1_loss"
  include {
    phase: TRAIN
  }
}
layer {
  name: "s1_accuracy"
  type: "Accuracy"
  bottom: "s1_prob"
  bottom: "s1_label"
  top: "s1_accuracy" 
  include {
    phase: TRAIN
  }
}
#--------------------------S2
layer {
  name: "fc6_2"
  type: "InnerProduct"
  bottom: "s2_feature"
  top: "fc6_2"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_2"
  type: "ReLU"
  bottom: "fc6_2"
  top: "fc6_2"
} 
layer {
  name: "drop6_2"
  type: "Dropout"
  bottom: "fc6_2"
  top: "fc6_2"
  dropout_param {
    dropout_ratio: 0.5
  }
} 
layer {
  name: "fc7_2"
  type: "InnerProduct"
  bottom: "fc6_2"
  top: "fc7_2"
  param {
    lr_mult: 0.1
    decay_mult: 1
  } 
  param {
    lr_mult: 0.2
    decay_mult: 0
  } 
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    } 
    bias_filler {
      type: "constant"
      value: 1
    } 
  } 
}
layer {
  name: "relu7_2"
  type: "ReLU"
  bottom: "fc7_2"
  top: "fc7_2"
}
layer { 
  name: "drop7_2"
  type: "Dropout"
  bottom: "fc7_2"
  top: "fc7_2"
  dropout_param {
    dropout_ratio: 0.5
  }
} 
layer {
  name: "s2_fc8"
  type: "InnerProduct"
  bottom: "fc7_2"
  top: "s2_fc8"
  param {
    lr_mult: 1
    decay_mult: 100
  }
  param {
    lr_mult: 2
    decay_mult: 0
  } 
  inner_product_param {
    num_output: 31
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    } 
  } 
}   
layer {
  name: "s2_prob"
  type: "Softmax"
  bottom: "s2_fc8"
  top: "s2_prob"
}
layer {
  name: "s2_loss"
  type: "SoftmaxWithLoss"
  bottom: "s2_fc8"
  bottom: "s2_label"
  top: "s2_loss"
  include {
    phase: TRAIN
  }
} 
layer {
  name: "s2_accuracy"
  type: "Accuracy"
  bottom: "s2_prob"
  bottom: "s2_label"
  top: "s2_accuracy"
  include {
    phase: TRAIN
  }
}
layer {
  name: "accuracy2"
  type: "Accuracy"
  bottom: "s2_prob"
  bottom: "label"
  top: "accuracy2"
  include {
    phase: TEST
  }
}
